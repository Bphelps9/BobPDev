<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Run_Batch_Job</name>
        <label>Run Batch Job</label>
        <locationX>796</locationX>
        <locationY>846</locationY>
        <actionName>MassUpdateInvocable</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Batch_Job_Outcome</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>batchSize</name>
            <value>
                <elementReference>Batch_Size</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>concatZipCodes</name>
            <value>
                <elementReference>SelectedZipCodes</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>objectName</name>
            <value>
                <elementReference>Object</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>JobId</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>Set_Zip_Codes</name>
        <label>Set Zip Codes</label>
        <locationX>682</locationX>
        <locationY>680</locationY>
        <assignmentItems>
            <assignToReference>SelectedZipCodes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Enter_Zip_Codes</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Run_Batch_Job</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>FinishRefresh</name>
        <choiceText>Refresh</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Refresh</stringValue>
        </value>
    </choices>
    <choices>
        <name>FinishStartOver</name>
        <choiceText>Start Over</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Start Over</stringValue>
        </value>
    </choices>
    <choices>
        <name>Radio_Account</name>
        <choiceText>Account</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Account</stringValue>
        </value>
    </choices>
    <choices>
        <name>Radio_All</name>
        <choiceText>All</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>All</stringValue>
        </value>
    </choices>
    <choices>
        <name>Radio_Enter</name>
        <choiceText>Enter Values Manually (semicolon-separated)</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Enter</stringValue>
        </value>
    </choices>
    <choices>
        <name>Radio_Lead</name>
        <choiceText>Lead</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Lead</stringValue>
        </value>
    </choices>
    <decisions>
        <name>Batch_Job_Outcome</name>
        <label>Batch Job Outcome</label>
        <locationX>779</locationX>
        <locationY>1052</locationY>
        <defaultConnector>
            <targetReference>Error_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Fail</defaultConnectorLabel>
        <rules>
            <name>Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>JobId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Apex_Job</targetReference>
            </connector>
            <label>Success</label>
        </rules>
    </decisions>
    <decisions>
        <name>Finish_Decision</name>
        <label>Finish Decision</label>
        <locationX>50</locationX>
        <locationY>720</locationY>
        <defaultConnector>
            <targetReference>Entry_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Start Over</defaultConnectorLabel>
        <rules>
            <name>Refresh</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>FinishAction</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FinishRefresh</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Apex_Job</targetReference>
            </connector>
            <label>Refresh</label>
        </rules>
    </decisions>
    <decisions>
        <name>Radio_Decision</name>
        <label>Radio Decision</label>
        <locationX>785</locationX>
        <locationY>492</locationY>
        <defaultConnector>
            <targetReference>Run_Batch_Job</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>All Selected</defaultConnectorLabel>
        <rules>
            <name>Text_Selected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Zip_Codes</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Radio_Enter</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Zip_Codes</targetReference>
            </connector>
            <label>Text Selected</label>
        </rules>
    </decisions>
    <formulas>
        <name>ShortJobId</name>
        <dataType>String</dataType>
        <expression>LEFT({!JobId}, 15)</expression>
    </formulas>
    <interviewLabel>Zip Code Mass Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Zip Code Mass Update</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Apex_Job</name>
        <label>Get Apex Job</label>
        <locationX>787</locationX>
        <locationY>1279</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Success_Screen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>JobId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AsyncApexJob</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Entry_Screen</name>
        <label>Entry Screen</label>
        <locationX>793</locationX>
        <locationY>257</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Radio_Decision</targetReference>
        </connector>
        <fields>
            <name>Object</name>
            <choiceReferences>Radio_Account</choiceReferences>
            <choiceReferences>Radio_Lead</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Object</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Zip_Codes</name>
            <choiceReferences>Radio_All</choiceReferences>
            <choiceReferences>Radio_Enter</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Zip Codes</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>WarningMessage</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Use with Caution! This option is not suggested as it may take an extensive amount of time to update the records, cause failure during such update and prevent the users from interacting with Accounts or related records.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Make sure to start the process during off-hours to minimize the impact to end-users.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Zip_Codes</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Radio_All</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Enter_Zip_Codes</name>
            <fieldText>Enter Zip Codes</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Zip_Codes</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Radio_Enter</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Batch_Size</name>
            <dataType>Number</dataType>
            <defaultValue>
                <numberValue>200.0</numberValue>
            </defaultValue>
            <fieldText>Batch Size</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Enter a value between 1 and 200 (including). Any other value will be ignored.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <scale>0</scale>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>976</locationX>
        <locationY>1051</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ErrorText</name>
            <fieldText>&lt;p&gt;Something went wrong. Check the provided input or lower the batch size and try again.&lt;/p&gt;&lt;p&gt;See the error message below for details.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Success_Screen</name>
        <label>Success Screen</label>
        <locationX>58</locationX>
        <locationY>1286</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Finish_Decision</targetReference>
        </connector>
        <fields>
            <name>SuccessText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;A Job was successfully queued to update the records. You can see the status of the process displayed below. To refresh, choose the &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Refresh &lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;option below and click the &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Next &lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;button. Or if you want to start a new job, select the &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Start Over&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt; option, then click &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Next&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Status:&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt; {!Get_Apex_Job.Status}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Status Details:&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt; {!Get_Apex_Job.ExtendedStatus}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Total Amount of Batches:&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt; {!Get_Apex_Job.TotalJobItems}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Processed Batches:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt; {!Get_Apex_Job.JobItemsProcessed}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Failed Batches: &lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Get_Apex_Job.NumberOfErrors}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Completed Date:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt; {!Get_Apex_Job.CompletedDate}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;You can also track the status of this job later in the &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Log &lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;object using the &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Job ID &lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;provided below:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(62, 62, 60);&quot;&gt;Long Job ID&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60);&quot;&gt;: {!JobId}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>FinishAction</name>
            <choiceReferences>FinishRefresh</choiceReferences>
            <choiceReferences>FinishStartOver</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>FinishRefresh</defaultSelectedChoiceReference>
            <fieldText>Choose One</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>667</locationX>
        <locationY>49</locationY>
        <connector>
            <targetReference>Entry_Screen</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>JobId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SelectedZipCodes</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
