<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Opportunity_Deal_Alert</name>
        <label>Opportunity Deal Alert</label>
        <locationX>1388</locationX>
        <locationY>688</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_RVP_User.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>CurrentUser</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Opportunity Deal Alert</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <decisions>
        <name>Account_Found_Decision</name>
        <label>Account Found?</label>
        <locationX>607</locationX>
        <locationY>688</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>AF_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Territory</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Closed_Won_Closed_Lost</name>
        <label>Closed Won, Closed Lost</label>
        <locationX>166</locationX>
        <locationY>989</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>CWCL_Yes</name>
            <conditionLogic>((1 AND 2) OR (3 AND 4)) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed Won</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Won</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed Lost</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Lost</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Amount</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>250000.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Discover_Design</name>
        <label>Discover, Design</label>
        <locationX>168</locationX>
        <locationY>597</locationY>
        <defaultConnector>
            <targetReference>Prove_Close</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>DD_Yes</name>
            <conditionLogic>((1 AND 2) OR (3 AND 4) OR 5) AND 6</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1-Discover</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>1-Discover</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2-Design</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>2-Design</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Month_to_Ship__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Month_to_Ship__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Amount</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>250000.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Prove_Close</name>
        <label>Prove, Close</label>
        <locationX>166</locationX>
        <locationY>801</locationY>
        <defaultConnector>
            <targetReference>Closed_Won_Closed_Lost</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>PC_Yes</name>
            <conditionLogic>((1 AND 2) OR (3 AND 4) OR 5) AND 6</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3-Prove</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>3-Prove</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>4-Close</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>4-Close</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Month_to_Ship__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Month_to_Ship__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Amount</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>100000.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Target_Prospect_Qualify</name>
        <label>Target, Prospect, Qualify</label>
        <locationX>167</locationX>
        <locationY>382</locationY>
        <defaultConnector>
            <targetReference>Discover_Design</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>TPQ_Yes</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5 AND (6 OR 7 OR 8)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1-Discover</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2-Design</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3-Prove</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>4-Close</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Amount</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>250000.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Target</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Prospect</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Qualify</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>User_Found_Decision</name>
        <label>User Found?</label>
        <locationX>1086</locationX>
        <locationY>690</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>UF_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_RVP_User</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Parent_Account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <formulas>
        <name>EmailBlock_AmountFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISCHANGED({!$Record.Amount}), {!EmailBlock_AmountChanged}, {!EmailBlock_AmountDefault})</expression>
    </formulas>
    <formulas>
        <name>EmailBlock_MonthToShipFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISCHANGED({!$Record.Month_to_Ship__c}), {!EmailBlock_MonthToShipChanged}, {!EmailBlock_MonthToShipDefault})</expression>
    </formulas>
    <formulas>
        <name>EmailBlock_ParentAccountFormula</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!Get_Account.ParentId})), {!EmailBlock_ParentAccount}, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>EmailBlock_StageFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISCHANGED({!$Record.StageName}), {!EmailBlock_StageChanged}, {!EmailBlock_StageDefault})</expression>
    </formulas>
    <formulas>
        <name>OpportunityLink</name>
        <dataType>String</dataType>
        <expression>LEFT($Api.Partner_Server_URL_530, FIND( &apos;/services&apos;, $Api.Partner_Server_URL_530)) + CASESAFEID({!$Record.Id})</expression>
    </formulas>
    <interviewLabel>Opportunity Deal Alert {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity Deal Alert</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>471</locationX>
        <locationY>686</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_Found_Decision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>RVPUser__c</queriedFields>
        <queriedFields>Territory_Name__c</queriedFields>
        <queriedFields>ParentId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Parent_Account</name>
        <label>Get Parent Account</label>
        <locationX>1247</locationX>
        <locationY>688</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Opportunity_Deal_Alert</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_RVP_User</name>
        <label>Get RVP User</label>
        <locationX>918</locationX>
        <locationY>688</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>User_Found_Decision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.RVPUser__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Territory</name>
        <label>Get Territory</label>
        <locationX>786</locationX>
        <locationY>688</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_RVP_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.Territory_Name__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TerritoryName__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Region__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>49</locationX>
        <locationY>58</locationY>
        <connector>
            <targetReference>Target_Prospect_Qualify</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Amount</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>100000.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Month_to_Ship__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>EmailBlock_AmountChanged</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(215, 8, 8);&quot;&gt;Amount&lt;/b&gt;&lt;span style=&quot;color: rgb(215, 8, 8);&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record__Prior.Amount} &lt;/span&gt;→&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(215, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Amount}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBlock_AmountDefault</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Amount&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Amount}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBlock_MonthToShipChanged</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(215, 8, 8);&quot;&gt;Month to Ship&lt;/b&gt;&lt;span style=&quot;color: rgb(215, 8, 8);&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record__Prior.Month_to_Ship__c} &lt;/span&gt;→&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(215, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Month_to_Ship__c}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBlock_MonthToShipDefault</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Month to Ship&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Month_to_Ship__c}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBlock_ParentAccount</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Parent Account:&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt; {!Get_Parent_Account.Name}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBlock_StageChanged</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(215, 8, 8);&quot;&gt;Stage&lt;/b&gt;&lt;span style=&quot;color: rgb(215, 8, 8);&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record__Prior.StageName} &lt;/span&gt;→&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(215, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.StageName}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBlock_StageDefault</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Stage&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.StageName}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Hi,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;The following high-value opportunity record has been updated:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Region Name&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;: {!Get_Account.Territory_Name__r.Region__c}&lt;/span&gt;{!EmailBlock_ParentAccountFormula}&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Account&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;: {!Get_Account.Name}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Name&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;: {!$Record.Name}{!EmailBlock_StageFormula}{!EmailBlock_AmountFormula}{!EmailBlock_MonthToShipFormula}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;Click here to view the record in Salesforce: {!OpportunityLink}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
</Flow>
